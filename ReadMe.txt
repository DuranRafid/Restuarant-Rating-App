My Project has 3 sides- 1) The Client Side 2) The Server Side 3) The Admin Side
	There is another big part. The Database.I did this on my pc. So the host was obviously "localhost" and the database name is "test". There is a main table named 'foodiesDhaka'. foodiesDhaka.sql is provided in the "Database" floder here. This table contains the name, the address, the area, food types , rating, reviews etc in it. Each Restuarant a table with it's name as the table name which contains the gmails that reviewed the restuarant and their ratings on service, price and environment and comments if they made. I have given several .sql files in the "Database folder".

1) The Client Side:
	Client is the normal viewer of the App.So, all the designs and decorations with fx were done on the client side.At the beginning there is a logo page. if you click anywhere of the page the main page arrives. The main page contains the main part. In the searchbox you can type a name and if it is enlisted in database the corresponding restuarant will come. You can also search by area and search by food. The list of areas and list of foods in javaFX comboboxes were generated from the Resultset of sql query in 'foodiesDhaka' Table.
	The restuarant Name with address will appear in the listview. I used Stackpane as a listview element and depicted the resturant name and addresses as labels and all these were done with FX. When a restuarant is clicked in the listview, a page with it's all necessary information arrives. It contains the name of the restuarant, address, what type of foods are available here and how many reviews have made on this restuarant, its overall rating, its price rating, service rating and environment rating.
	The "reviews" label is created as a link. If it is clicked, the list of reviews will appear as a new page. Hence again satckPane is used as listview element and the gmails, their ratings on service, price and environment and comments.
	There is button named show in google maps and clicking it will open the google map preview. It was done using a google-map jar file. But unfortunately, this jar file may cause error in java native code and crush the programme at beginning. If the programme crushes, it is suggested to comment out all the necessary codes that contain the codes regarding google maps. These parts are marked in the code.
	It was not possible to collect the langitudes and latitudes of all the restuarants. So, basically the dhaka city map was shown in the mapView. It is a live mapView with zoom Ability.
	There is a button named "Rate us" which will open a new page seeking review about that restuarant. It will seek your opinion in 3 different categories- Price, Service and Environment.You may add comments if you want. Your gmail id is required for two reasons.You can't give an invalid id. javax.mail.jar is used to check whether the gmail address is valid or not. Even if the gmail address is valid it won't take your review if you have already rated that restuarant. It's done in such way so that one can't intentionally give rating to a restuarant and several times and affect drastically it's review. When your review is done,You'll press the submit button and the reviews will be send to server. Server will then generate rating for that restuarant. The rating generation access isn't given to the client side.
	There is another big thing in the main page. The Recommandation side. If a client notices that his/her any known restuarant is not listed, he may recommend it to the admin to add this restuarant. He must fill up the form:- Restuarant name, address, area and foods available there and then submit.

2) The Server Side:
	The server has only one interface with a Label "Server Runnng". It works at backside. It recieves rating from the clients and update the restuarant ratings in database. It only adds the gmail id, reviews on three category and the comments in the table named as the corresponding restuarant name on which the rating is given.
	It also maintains the communication between client and admin. It stores Client's recommendations and sends them to the admin when admin connects.

3)The Admin Side:
	The admin page starts with a password Login. If the name and password is valid, the admin logs in and in the main page, He recieves the Client recommendations. He can simple add those recommendations by clicking the "Add" button in the tableview. it will add the corresponding restuarant in tableview. The admin can also manually add item by clicking the "Add New Restuarant" button. Then the addItem page opens up. Fill up the form and press the "Add" button simply adds the restuarant in database.( Just as easy as Insert in phpMyAdmin). It also creates a table with the restuarant name with clomuns name persons(Varchar), priceRating, serviceRating and envirRating(Floats) and comments(Varchar). The admin can also delete any restuarant more easily than this. By Clicking The Delete Restuarant, the deleteItem page Shows up and a tableview is shown where all the restuarants are listed and by clicking the corresponding "Delete" button, the admin can delete the corresponding restuarant.
	After admin's operation, when a client opens the client page,he/she can notice the changes.
